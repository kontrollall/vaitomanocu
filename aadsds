-- Carregando Rayfield (link oficial corrigido)
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source.lua'))()

-- Criando janela e seção
local Window = Rayfield:CreateWindow({
    Name = "Credits: TGMANKASKE",
    LoadingTitle = "Carregando menu...",
    LoadingSubtitle = "Aguarde",
    ConfigurationSaving = {
        Enabled = false,
    },
    Discord = {
        Enabled = false,
    }
})

local Section = Window:CreateTab("Boosts", nil)
local MorphSection = Section:CreateSection("Morphs")

local tycoonsFolder = workspace:WaitForChild("Tycoons")

local morphList = {}
local morphMap = {}

local selectedMorphName = nil

-- Função para pegar morphs únicos e mapa name->lista morphs
local function getUniqueMorphs()
    local uniqueNames = {}
    local uniqueList = {}
    local nameToMorphs = {}

    for _, tycoon in pairs(tycoonsFolder:GetChildren()) do
        local morphs = tycoon:FindFirstChild("Morphs")
        if morphs then
            for _, morph in pairs(morphs:GetChildren()) do
                if morph:FindFirstChild("Remote") then
                    local name = morph.Name
                    if not nameToMorphs[name] then
                        nameToMorphs[name] = {}
                        table.insert(uniqueList, name)
                    end
                    table.insert(nameToMorphs[name], morph)
                end
            end
        end
    end

    table.sort(uniqueList)
    return uniqueList, nameToMorphs
end

-- Cria dropdown apenas uma vez
local morphDropdown = MorphSection:CreateDropdown({
    Name = "Select Morph to Steal",
    Options = {},
    CurrentOption = nil,
    Flag = nil,
    Callback = function(option)
        selectedMorphName = option
    end
})

-- Atualiza morphs na dropdown e mapa
local function updateMorphs()
    local newMorphList, newMorphMap = getUniqueMorphs()

    -- Verifica se mudou (simples)
    local changed = false
    if #newMorphList ~= #morphList then
        changed = true
    else
        for i = 1, #newMorphList do
            if newMorphList[i] ~= morphList[i] then
                changed = true
                break
            end
        end
    end

    if changed then
        morphList = newMorphList
        morphMap = newMorphMap

        morphDropdown:Refresh(morphList)
        if #morphList > 0 then
            selectedMorphName = selectedMorphName or morphList[1]
            morphDropdown:SetValue(selectedMorphName)
        else
            selectedMorphName = nil
            morphDropdown:SetValue(nil)
        end
    end
end

-- Botão para roubar todos morphs com o nome selecionado
MorphSection:CreateButton({
    Name = "Steal",
    Callback = function()
        if not selectedMorphName then
            warn("Nenhum morph selecionado!")
            return
        end
        if not morphMap[selectedMorphName] then
            warn("Morph selecionado não encontrado!")
            return
        end

        for _, morph in ipairs(morphMap[selectedMorphName]) do
            local remote = morph:FindFirstChild("Remote")
            if remote and remote:IsA("RemoteEvent") then
                remote:FireServer("Stolen")
                print("Stealing:", selectedMorphName)
            else
                warn("Remote não encontrado para morph:", selectedMorphName)
            end
        end
    end
})

-- Atualiza morphs a cada 2 segundos sem spawn (uso de loop simples)
coroutine.wrap(function()
    while true do
        updateMorphs()
        wait(2)
    end
end)()
